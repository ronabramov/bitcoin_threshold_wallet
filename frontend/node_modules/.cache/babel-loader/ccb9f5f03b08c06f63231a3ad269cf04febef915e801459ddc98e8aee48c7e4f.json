{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ron\\\\Documents\\\\Cryptogtaphy\\\\Repository\\\\bitcoin_treshold_wallet\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport WalletList from \"./components/WalletList\";\nimport TransactionForm from \"./components/TransactionForm\";\nimport TransactionList from \"./components/TransactionList\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport Button from \"@mui/material/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#d2e3eb\" // Light blue\n    },\n    secondary: {\n      main: \"#1a1f36\" // Dark blue\n    }\n  }\n});\nconst App = () => {\n  _s();\n  const [selectedWallet, setSelectedWallet] = useState(null);\n  const transactionListRef = useRef(); // Reference to the TransactionList component\n  const userId = \"User1\"; // Replace with dynamic user input if needed\n\n  // Trigger the transaction list to refresh\n  const refreshTransactions = () => {\n    if (transactionListRef.current) {\n      transactionListRef.current.fetchTransactions();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          color: \"inherit\",\n          children: \"Threshold Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        padding: \"16px\",\n        backgroundColor: \"#f5f5f5\",\n        minHeight: \"calc(100vh - 64px)\" // Adjust for AppBar height\n      },\n      children: [!selectedWallet ? /*#__PURE__*/_jsxDEV(WalletList, {\n        userId: userId,\n        onSelectWallet: setSelectedWallet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            padding: \"10px\",\n            borderRight: \"1px solid #ccc\"\n          },\n          children: /*#__PURE__*/_jsxDEV(TransactionList, {\n            ref: transactionListRef,\n            walletId: selectedWallet.wallet_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            padding: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(TransactionForm, {\n            wallet: selectedWallet,\n            userId: userId,\n            refreshTransactions: refreshTransactions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), selectedWallet && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: () => setSelectedWallet(null),\n        sx: {\n          marginTop: \"16px\"\n        },\n        children: \"Back to Wallet List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"footer\",\n      sx: {\n        backgroundColor: \"rgba(26, 31, 54, 0.9)\",\n        // Dark translucent blue\n        color: \"#d2e3eb\",\n        // Light blue for text\n        padding: \"10px\",\n        textAlign: \"center\",\n        fontSize: \"16px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: \"\\xA9 2025 Crypto Wallet. All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"fTuy6JBVB2FUpxmPEgbcADdn6JU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","WalletList","TransactionForm","TransactionList","AppBar","Toolbar","Typography","Box","ThemeProvider","createTheme","Button","jsxDEV","_jsxDEV","theme","palette","primary","main","secondary","App","_s","selectedWallet","setSelectedWallet","transactionListRef","userId","refreshTransactions","current","fetchTransactions","children","position","variant","component","color","fileName","_jsxFileName","lineNumber","columnNumber","sx","padding","backgroundColor","minHeight","onSelectWallet","style","display","flex","borderRight","ref","walletId","wallet_id","wallet","onClick","marginTop","textAlign","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/Ron/Documents/Cryptogtaphy/Repository/bitcoin_treshold_wallet/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport WalletList from \"./components/WalletList\";\r\nimport TransactionForm from \"./components/TransactionForm\";\r\nimport TransactionList from \"./components/TransactionList\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#d2e3eb\", // Light blue\r\n        },\r\n        secondary: {\r\n            main: \"#1a1f36\", // Dark blue\r\n        },\r\n    },\r\n});\r\n\r\nconst App = () => {\r\n    const [selectedWallet, setSelectedWallet] = useState(null);\r\n    const transactionListRef = useRef(); // Reference to the TransactionList component\r\n    const userId = \"User1\"; // Replace with dynamic user input if needed\r\n\r\n    // Trigger the transaction list to refresh\r\n    const refreshTransactions = () => {\r\n        if (transactionListRef.current) {\r\n            transactionListRef.current.fetchTransactions();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" component=\"div\" color=\"inherit\">\r\n                        Threshold Wallet\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Box\r\n                component=\"main\"\r\n                sx={{\r\n                    padding: \"16px\",\r\n                    backgroundColor: \"#f5f5f5\",\r\n                    minHeight: \"calc(100vh - 64px)\", // Adjust for AppBar height\r\n                }}\r\n            >\r\n                {!selectedWallet ? (\r\n                    <WalletList userId={userId} onSelectWallet={setSelectedWallet} />\r\n                ) : (\r\n                    <div style={{ display: \"flex\" }}>\r\n                        {/* Left side: Transactions */}\r\n                        <div style={{ flex: 1, padding: \"10px\", borderRight: \"1px solid #ccc\" }}>\r\n                            <TransactionList\r\n                                ref={transactionListRef}\r\n                                walletId={selectedWallet.wallet_id}\r\n                            />\r\n                        </div>\r\n\r\n                        {/* Right side: New Transaction Form */}\r\n                        <div style={{ flex: 1, padding: \"10px\" }}>\r\n                            <TransactionForm\r\n                                wallet={selectedWallet}\r\n                                userId={userId}\r\n                                refreshTransactions={refreshTransactions}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {selectedWallet && (\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={() => setSelectedWallet(null)}\r\n                        sx={{ marginTop: \"16px\" }}\r\n                    >\r\n                        Back to Wallet List\r\n                    </Button>\r\n                )}\r\n            </Box>\r\n            <Box\r\n                component=\"footer\"\r\n                sx={{\r\n                    backgroundColor: \"rgba(26, 31, 54, 0.9)\", // Dark translucent blue\r\n                    color: \"#d2e3eb\", // Light blue for text\r\n                    padding: \"10px\",\r\n                    textAlign: \"center\",\r\n                    fontSize: \"16px\",\r\n                }}\r\n            >\r\n                <Typography variant=\"body2\">\r\n                    © 2025 Crypto Wallet. All rights reserved.\r\n                </Typography>\r\n            </Box>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}