{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ron\\\\Documents\\\\Cryptogtaphy\\\\Repository\\\\bitcoin_treshold_wallet\\\\frontend\\\\src\\\\components\\\\WalletsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getWallets } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletList = ({\n  userId,\n  onSelectWallet\n}) => {\n  _s();\n  const [wallets, setWallets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchWallets = async () => {\n      try {\n        const data = await getWallets(userId);\n        setWallets(data);\n      } catch (error) {\n        console.error(\"Failed to fetch wallets:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWallets();\n  }, [userId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading wallets...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Wallets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: wallets.map(wallet => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onSelectWallet(wallet),\n          children: [wallet.wallet_name, \": \", wallet.metadata.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)\n      }, wallet.wallet_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(WalletList, \"M7x1KOzzWkxjKXdCRQNyGvyZSag=\");\n_c = WalletList;\nexport default WalletList;\nvar _c;\n$RefreshReg$(_c, \"WalletList\");","map":{"version":3,"names":["React","useState","useEffect","getWallets","jsxDEV","_jsxDEV","WalletList","userId","onSelectWallet","_s","wallets","setWallets","loading","setLoading","fetchWallets","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","wallet","onClick","wallet_name","metadata","description","wallet_id","_c","$RefreshReg$"],"sources":["C:/Users/Ron/Documents/Cryptogtaphy/Repository/bitcoin_treshold_wallet/frontend/src/components/WalletsList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getWallets } from \"../api/api\";\r\n\r\nconst WalletList = ({ userId, onSelectWallet }) => {\r\n    const [wallets, setWallets] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchWallets = async () => {\r\n            try {\r\n                const data = await getWallets(userId);\r\n                setWallets(data);\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch wallets:\", error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchWallets();\r\n    }, [userId]);\r\n\r\n    if (loading) return <p>Loading wallets...</p>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Your Wallets</h2>\r\n            <ul>\r\n                {wallets.map((wallet) => (\r\n                    <li key={wallet.wallet_id}>\r\n                        <button onClick={() => onSelectWallet(wallet)}>\r\n                            {wallet.wallet_name}: {wallet.metadata.description}\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WalletList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMZ,UAAU,CAACI,MAAM,CAAC;QACrCI,UAAU,CAACI,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD,CAAC,SAAS;QACNH,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IACDC,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EAEZ,IAAIK,OAAO,EAAE,oBAAOP,OAAA;IAAAa,QAAA,EAAG;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE7C,oBACIjB,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBjB,OAAA;MAAAa,QAAA,EACKR,OAAO,CAACa,GAAG,CAAEC,MAAM,iBAChBnB,OAAA;QAAAa,QAAA,eACIb,OAAA;UAAQoB,OAAO,EAAEA,CAAA,KAAMjB,cAAc,CAACgB,MAAM,CAAE;UAAAN,QAAA,GACzCM,MAAM,CAACE,WAAW,EAAC,IAAE,EAACF,MAAM,CAACG,QAAQ,CAACC,WAAW;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C;MAAC,GAHJE,MAAM,CAACK,SAAS;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIrB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACb,EAAA,CAlCIH,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAoChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}