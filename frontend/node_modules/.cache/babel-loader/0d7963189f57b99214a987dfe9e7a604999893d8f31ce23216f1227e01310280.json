{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ron\\\\Documents\\\\Cryptogtaphy\\\\Repository\\\\bitcoin_treshold_wallet\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport WalletList from \"./components/WalletList\";\nimport TransactionForm from \"./components/TransactionForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedWallet, setSelectedWallet] = useState(null);\n  const userId = \"User1\"; // Replace with dynamic user input if needed\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bitcoin Threshold Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), !selectedWallet ? /*#__PURE__*/_jsxDEV(WalletList, {\n      userId: userId,\n      onSelectWallet: setSelectedWallet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(TransactionForm, {\n      wallet: selectedWallet,\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this), selectedWallet && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setSelectedWallet(null),\n      children: \"Back to Wallet List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"+QsF+zW0ZC+O5pm8thEpY7cftOs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","WalletList","TransactionForm","jsxDEV","_jsxDEV","App","_s","selectedWallet","setSelectedWallet","userId","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectWallet","wallet","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ron/Documents/Cryptogtaphy/Repository/bitcoin_treshold_wallet/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport WalletList from \"./components/WalletList\";\r\nimport TransactionForm from \"./components/TransactionForm\";\r\n\r\nconst App = () => {\r\n    const [selectedWallet, setSelectedWallet] = useState(null);\r\n    const userId = \"User1\"; // Replace with dynamic user input if needed\r\n\r\n    return (\r\n        <div>\r\n            <h1>Bitcoin Threshold Wallet</h1>\r\n            {!selectedWallet ? (\r\n                <WalletList userId={userId} onSelectWallet={setSelectedWallet} />\r\n            ) : (\r\n                <TransactionForm wallet={selectedWallet} userId={userId} />\r\n            )}\r\n            {selectedWallet && (\r\n                <button onClick={() => setSelectedWallet(null)}>\r\n                    Back to Wallet List\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,eAAe,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAMS,MAAM,GAAG,OAAO,CAAC,CAAC;;EAExB,oBACIL,OAAA;IAAAM,QAAA,gBACIN,OAAA;MAAAM,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChC,CAACP,cAAc,gBACZH,OAAA,CAACH,UAAU;MAACQ,MAAM,EAAEA,MAAO;MAACM,cAAc,EAAEP;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEjEV,OAAA,CAACF,eAAe;MAACc,MAAM,EAAET,cAAe;MAACE,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC7D,EACAP,cAAc,iBACXH,OAAA;MAAQa,OAAO,EAAEA,CAAA,KAAMT,iBAAiB,CAAC,IAAI,CAAE;MAAAE,QAAA,EAAC;IAEhD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACX;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACR,EAAA,CAnBID,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAqBT,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}